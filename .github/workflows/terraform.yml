name: aws-deployment


  workflow_dispatch:
     inputs : 
      region :
        description: "Enter your region : "
        required: true  
        type: string

      # action:
      #   description: 'Terraform Action to Perform'
      #   type: choice
      #   options:
      #   - Terraform_apply
      #   - Terraform_destroy      

env:
  BUCKET: pitambar
  TFSTATE_FILE: s3.tfstate
  aws_region: ${{ github.event.inputs.region }}
  # aws_region: us-east-1


jobs:
  Terraform_apply :
      runs-on : ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: ${{ env.aws_region }}

        - name: Terraform hashicorp setup
          uses: hashicorp/setup-terraform@v2.0.2

        - name: terraform init
          run: |
            cd module
            terraform init -reconfigure -backend-config="bucket=${{ env.BUCKET }}" -backend-config="key=${{ env.TFSTATE_FILE }}"

        - name: terraform plan
          run: |
            cd module
            terraform plan

        - name: terraform apply
          run: |
            cd module 
            terraform apply -auto-approve










  # terraform_destroy:
  #   name: "Terraform_destroy"
  #   if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ github.event.inputs.resource }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Terraform Init
  #       id: init
  #       run: |
  #           cd module
  #           terraform init -reconfigure -backend-config="bucket=${{ env.BUCKET }}" -backend-config="key=${{ env.TFSTATE_FILE }}" -backend-config="region=${{ env.aws_region }}"
  #       env:
  #           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #           AWS_DEFAULT_REGION: ${{ secrets.REGION }}
      
  #     - name: Terraform Destroy
  #       id: destroy
  #       working-directory: ${{ github.event.inputs.resource }}
  #       run: |
  #           cd module
  #           terraform destroy -auto-approve -var-file=variables.tfvars
  #       env:
  #           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #           AWS_DEFAULT_REGION: ${{ secrets.REGION }}